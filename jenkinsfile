  node{
  
    echo "The Job Name is: ${env.JOB_NAME}" 
echo "The Build number is: ${env.BUILD_NUMBER}" 
echo "The Node is name is: ${env.NODE_NAME}" 
echo "The Jenkins HD is: ${env.JENKINS_HOME}"   
  
  def mavenHome = tool name: "maven.3.8.6"
    
   properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([githubPush()])])
try {
stage('checkoutcode'){
sendslacknotifications('STARTED')
 git branch: 'development', credentialsId: 'a3cc0927-12e4-4932-8f53-fb3e92fe4e8b', url: 'https://github.com/lokeshsgithub/maven-web-application-fork.git'
 }
stage('build'){
sh "${mavenHome}/bin/mvn clean package"
 }
 stage('executesonarqubereport'){
 sh "${mavenHome}/bin/mvn clean sonar:sonar"
 }
 stage('upload the artifact'){
     sh "${mavenHome}/bin/mvn clean deploy"
 }
 stage('Deploy the APPINTO tomcatserver'){
      sshagent(['57b125d4-aef3-44c0-b14c-f5e4cecbcfac']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.229:/opt/apache-tomcat-9.0.70/webapps/"
 }
 }
 }//try closed
 catch (e) {
 currentBuild.result ="FAILURE"
 }
 finally{
 sendslacknotifications(currentBuild.result)
 }
}//node closed
def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means success
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel: '#citibank-projects')
}


